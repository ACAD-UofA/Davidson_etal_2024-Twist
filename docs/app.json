[{"name":"app.R","content":"# Load the shiny library\nlibrary(shiny)\nsetwd(\"~/Library/CloudStorage/Box-Box/Robbi_PhD/TWIST_Tests/cost_benefit/test\")\n\n# Load the UI function from ui.R\nsource(\"ui.R\")\n\n# Load the server function from server.R\nsource(\"server.R\")\n\n# Run the application\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"server.R","content":"library(shiny)\n\n# Define server logic\nserver <- function(input, output) {\n  data <- reactive({\n    num_points <- input$num_points\n    noise_level <- input$noise_level\n    x <- seq(1, num_points)\n    y <- x + rnorm(num_points, sd = noise_level)\n    data <- data.frame(x = x, y = y)\n    return(data)\n  })\n  \n  # Render scatter plot\n  output$scatter_plot <- renderPlot({\n    data <- data()\n    plot(data$x, data$y, pch = 19, col = \"blue\", xlab = \"X\", ylab = \"Y\", main = \"Simple Scatter Plot\")\n  })\n  return(server)\n}","type":"text"},{"name":"ui.R","content":"# Load the shiny library\nlibrary(shiny)\n\n# Define UI\nui <- fluidPage(\n  titlePanel(\"Simple Scatter Plot\"),\n  sidebarLayout(\n    sidebarPanel(\n      numericInput(\"num_points\", \"Number of Points:\", value = 50, min = 10, max = 100),\n      sliderInput(\"noise_level\", \"Noise Level:\", value = 0.5, min = 0, max = 1, step = 0.1)\n    ),\n    mainPanel(\n      plotOutput(\"scatter_plot\")\n    )\n  )\n)","type":"text"}]
